/*
 * I need to read these two:
 * https://getbem.com/introduction/
 * https://smacss.com/
 * 
 * Use this to order CSS properties.
 * (Taken and edited from https://github.com/necolas/idiomatic-css)
 *
 * .selector {
 * 		Positioning
 * 	position: absolute;
 * 	z-index: 10;
 * 	top: 0;
 * 	right: 0;
 * 	bottom: 0;
 * 	left: 0;
 *
 * 		Display & Box Model
 * 	display: flex;
	flex-direction: column;
 * 	overflow: hidden;
 * 	box-sizing: border-box;
 * 	flex: 0 1;
 * 	max-width: 100%
 * 	width: 100px;
 * 	max-height: 100%;
 * 	height: 100px;
 * 	padding: 10px;
 * 	border: 10px solid #333;
 * 	margin: 10px;
 *
 * 		Other
 * 	background: #000;
 * 	color: #fff;
 * 	font-family: sans-serif;
 * 	font-size: 16px;
 * 	text-align: right;
 * 	animation: 3s ease-out 1s 1 normal forwards running slide;
 * }
 */

/* || Global Variables */

:root {
	--max-width: 1440px;
}

/* || Base*/

body {
	display: flex;
	flex-direction: column;
	min-height: 100vh;
}

/* || Layout*/

#loading-screen {
	position: fixed;
	z-index: 1;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	animation: 0s step-start 5s 1 normal forwards running loading-screen-collapse;
}

/* || Module*/

#loading-screen-door-left {
	position: absolute;
	top: 0;
	bottom: 0;
	left: 0;
	width: 25vw;
	background-color: var(--bs-blue);
	clip-path: polygon(0% 0%, 100% 0%, 60% 100%, 0% 100%);
}

#loading-screen-door-right {
	position: absolute;
	top: 0;
	right: 0;
	bottom: 0;
	width: 85vw;
	background-color: var(--bs-red);
	clip-path: polygon(11.75% 0%, 100% 0%, 100% 100%, 0% 100%);
}

#loading-screen-slide {
	position: fixed;
	right: -16rem;
	bottom: 0;
	left: -16rem;
	height: 8rem;
	background-color: var(--bs-yellow);
	color: var(--bs-red);
	animation: 5s linear 0s 1 normal both running loading-screen-slide-left;
}

#loading-infobox {
	position: relative;
	top: 2rem;
	width: 8rem;
	margin: 0 auto;
	text-align: center;
}

#loading-infobox-bar {
	height: 1rem;
	width: 8rem;
	margin-bottom: 1rem;
	outline: thick double var(--bs-border-color);
	animation: 500ms linear 250ms infinite normal none running loading-bar-shake;
}

#loading-infobox-bar-inside {
	height: 1rem;
	width: 0;
	background-color: var(--bs-red);
	animation: 3750ms linear 250ms 1 normal forwards running loading-bar-move;
}

.letter-bounce {
	display: inline-block;
	animation: 250ms ease infinite alternate none running bounce;
}

.letter-bounce:nth-child(2) {
	animation-delay: 125ms;
}

.letter-bounce:nth-child(3) {
	animation-delay: 250ms;
}

.letter-bounce:nth-child(4) {
	animation-delay: 375ms;
}

.letter-bounce:nth-child(5) {
	animation-delay: 500ms;
}

.letter-bounce:nth-child(6) {
	animation-delay: 625ms;
}

.letter-bounce:nth-child(7) {
	animation-delay: 750ms;
}

.letter-bounce:nth-child(8) {
	animation-delay: 875ms;
}

.letter-bounce:nth-child(9) {
	animation-delay: 1s;
}

.letter-bounce:nth-child(10) {
	animation-delay: 1125ms;
}

/* || State*/

/* || Animations*/

@keyframes loading-screen-collapse {
	to {
		display: none;
	}
}

@keyframes loading-screen-slide-left {
	0% {
		left: 100vw;
	}
	5% {
		left: 0;
	}
	80% {
		right: 0;
	}
	85% {
		right: 100vw;
	}
	100% {
		right: 100vw;
	}
}

@keyframes loading-bar-shake {
	0% {
		transform: translate(0.01rem, 0.01rem) rotate(0);
	}
	10% {
		transform: translate(-0.01rem, -0.02rem) rotate(-1deg);
	}
	20% {
		transform: translate(-0.03rem, 0) rotate(1deg);
	}
	30% {
		transform: translate(0.03rem, 0.02rem) rotate(0);
	}
	40% {
		transform: translate(0.01rem, -0.01rem) rotate(1deg);
	}
	50% {
		transform: translate(-0.01rem, 0.02rem) rotate(-1deg);
	}
	60% {
		transform: translate(0.03rem, 0.01) rotate(0);
	}
	70% {
		transform: translate(0.03rem, 0.01rem) rotate(-1deg);
	}
	80% {
		transform: translate(-0.01rem, -0.01rem) rotate(1deg);
	}
	90% {
		transform: translate(0.01rem, 0.02rem) rotate(0);
	}
	100% {
		transform: translate(0.01rem, -0.02rem) rotate(-1deg);
	}
}

@keyframes loading-bar-move {
	100% {
		width: 8rem;
	}
}

@keyframes bounce {
	100% {
		transform: translateY(-0.5rem);
	}
}